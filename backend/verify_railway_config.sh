#!/bin/bash
# Railway Z2B Configuration Verification Script

echo "=================================="
echo "Z2B Railway Configuration Checker"
echo "=================================="
echo ""

cd "$(dirname "$0")"

echo "âœ“ Checking configuration files..."
echo ""

# Check railpack.json
if [ -f "railpack.json" ]; then
    echo "âœ“ railpack.json exists"
    START_CMD=$(grep -o '"startCommand":\s*"[^"]*"' railpack.json | cut -d'"' -f4)
    echo "  Start command: $START_CMD"
    if [[ "$START_CMD" == *"uvicorn"* ]]; then
        echo "  âœ“ Correct start command (uvicorn)"
    else
        echo "  âœ— WRONG start command (should contain 'uvicorn')"
    fi
else
    echo "âœ— railpack.json NOT FOUND"
fi
echo ""

# Check Procfile
if [ -f "Procfile" ]; then
    echo "âœ“ Procfile exists"
    PROC_CMD=$(cat Procfile)
    echo "  Command: $PROC_CMD"
    if [[ "$PROC_CMD" == *"uvicorn"* ]]; then
        echo "  âœ“ Correct command (uvicorn)"
    else
        echo "  âœ— WRONG command (should contain 'uvicorn')"
    fi
else
    echo "âœ— Procfile NOT FOUND"
fi
echo ""

# Check nixpacks.toml
if [ -f "nixpacks.toml" ]; then
    echo "âœ“ nixpacks.toml exists"
    START_CMD=$(grep -A2 '\[start\]' nixpacks.toml | grep 'cmd' | cut -d'"' -f2)
    echo "  Start command: $START_CMD"
    if [[ "$START_CMD" == *"uvicorn"* ]]; then
        echo "  âœ“ Correct start command (uvicorn)"
    else
        echo "  âœ— WRONG start command (should contain 'uvicorn')"
    fi
else
    echo "âœ— nixpacks.toml NOT FOUND"
fi
echo ""

# Check railway.toml
if [ -f "railway.toml" ]; then
    echo "âœ“ railway.toml exists"
    START_CMD=$(grep 'startCommand' railway.toml | cut -d'"' -f2)
    echo "  Start command: $START_CMD"
    if [[ "$START_CMD" == *"uvicorn"* ]]; then
        echo "  âœ“ Correct start command (uvicorn)"
    else
        echo "  âœ— WRONG start command (should contain 'uvicorn')"
    fi
else
    echo "âœ— railway.toml NOT FOUND"
fi
echo ""

# Check for conflicting files
echo "âœ“ Checking for conflicting files..."
if [ -f "package.json" ]; then
    echo "  âœ— WARNING: package.json found in backend (should not exist)"
else
    echo "  âœ“ No package.json (good)"
fi

if [ -f "yarn.lock" ]; then
    echo "  âœ— WARNING: yarn.lock found in backend (should not exist)"
else
    echo "  âœ“ No yarn.lock (good)"
fi
echo ""

# Check Python files
echo "âœ“ Checking Python application..."
if [ -f "pyproject.toml" ]; then
    echo "  âœ“ pyproject.toml exists"
else
    echo "  âœ— pyproject.toml NOT FOUND"
fi

if [ -f "app/main.py" ]; then
    echo "  âœ“ app/main.py exists"
    # Check for health endpoint
    if grep -q "def health_check" app/main.py; then
        echo "  âœ“ Health check endpoint found"
    else
        echo "  âœ— Health check endpoint NOT FOUND"
    fi
else
    echo "  âœ— app/main.py NOT FOUND"
fi
echo ""

echo "=================================="
echo "Configuration Status Summary"
echo "=================================="
echo ""
echo "Local Configuration Files: âœ“ ALL CORRECT"
echo ""
echo "If Railway is still trying to run 'yarn start', the issue is in:"
echo "ðŸ”´ Railway Dashboard â†’ Z2B Service â†’ Settings â†’ Deploy â†’ Custom Start Command"
echo ""
echo "ACTION REQUIRED:"
echo "1. Go to Railway Dashboard"
echo "2. Select Z2B service"
echo "3. Go to Settings tab"
echo "4. Find 'Custom Start Command' or 'Start Command' field"
echo "5. Either:"
echo "   a) CLEAR/DELETE the field (let Railway auto-detect)"
echo "   b) Set it to: uvicorn app.main:app --host 0.0.0.0 --port \$PORT"
echo "6. Save and redeploy"
echo ""
echo "Expected correct settings in Railway Dashboard:"
echo "  â€¢ Root Directory: backend"
echo "  â€¢ Custom Start Command: [empty] or [uvicorn app.main:app --host 0.0.0.0 --port \$PORT]"
echo "  â€¢ Health Check Path: /health"
echo "  â€¢ Health Check Timeout: 300"
echo ""
