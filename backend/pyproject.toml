[tool.poetry]
name = "z2-backend"
version = "0.1.0"
description = "Z2 AI Workforce Platform - Backend API"
authors = ["Z2 Team <team@z2.ai>"]
readme = "README.md"
packages = [
    { include = "app" }
]

[tool.poetry.dependencies]
python = ">=3.11,<3.13"
fastapi = "^0.104.1"
uvicorn = {extras = ["standard"], version = "^0.24.0"}
pydantic = "^2.5.0"
pydantic-settings = "^2.1.0"
sqlalchemy = "^2.0.23"
alembic = "^1.13.0"
asyncpg = "^0.29.0"
psycopg2-binary = "^2.9.9"
redis = "^5.0.1"
python-jose = {extras = ["cryptography"], version = "^3.3.0"}
passlib = {extras = ["bcrypt"], version = "^1.7.4"}
python-multipart = "^0.0.18"
httpx = "^0.25.2"
openai = "^1.6.1"
anthropic = "^0.8.1"
groq = "^0.4.1"
google-generativeai = "^0.3.2"
chromadb = "^0.4.18"
celery = "^5.3.4"
structlog = "^23.2.0"
tenacity = "^8.2.3"
prometheus-client = "^0.19.0"
sentry-sdk = {extras = ["fastapi"], version = "^2.33.2"}
psutil = "^6.1.0"
beautifulsoup4 = "^4.12.0"
ddgs = "^9.0.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.3"
pytest-asyncio = "^0.21.1"
pytest-cov = "^4.1.0"
pytest-mock = "^3.12.0"
pytest-xdist = "^3.6.0"
black = "^24.3.0"
ruff = "^0.1.7"
mypy = "^1.7.1"
pre-commit = "^3.6.0"
httpx = "^0.25.2"
bandit = "^1.7.6"
safety = "^3.6.0"
aiosqlite = "^0.19.0"

[tool.poetry.scripts]
start = "uvicorn app.main:app --host 0.0.0.0 --port 8000"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.ruff]
target-version = "py311"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.mypy]
python_version = "3.11"
check_untyped_defs = true
disallow_any_generics = true
disallow_untyped_calls = true
disallow_untyped_defs = true
ignore_missing_imports = true
no_implicit_optional = true
show_error_codes = true
strict_equality = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_configs = true
no_implicit_reexport = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=app",
    "--cov-report=term-missing:skip-covered",
    "--cov-report=html",
    "--cov-report=xml",
    "--cov-fail-under=80",
    "-p", "no:warnings",
]
asyncio_mode = "auto"
markers = [
    "unit: marks tests as unit tests (deselect with '-m \"not unit\"')",
    "integration: marks tests as integration tests (deselect with '-m \"not integration\"')",
    "e2e: marks tests as end-to-end tests (deselect with '-m \"not e2e\"')",
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "security: marks tests as security tests",
]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
]