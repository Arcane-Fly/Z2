# Railway.app Configuration for Z2 Platform

[services.backend]
source = "backend"
domains = ["z2-api.railway.app"]

[services.backend.build]
buildCommand = "poetry install --no-dev"
watchPaths = ["backend/app/**"]

[services.backend.deploy]
startCommand = "uvicorn app.main:app --host 0.0.0.0 --port $PORT"
healthcheckPath = "/health"
restartPolicyType = "on_failure"

[services.backend.variables]
PYTHON_VERSION = "3.11"
POETRY_VERSION = "1.6.1"
PORT = "${{PORT}}"
STORAGE_PATH = "/app/storage"

[services.backend.volumes]
volumes = ["app_storage:/app/storage"]

# Frontend Web App
[services.frontend]
source = "frontend"
domains = ["z2.railway.app"]

[services.frontend.build]
buildCommand = "npm ci && npm run build"
publishPath = "dist"
watchPaths = ["frontend/src/**"]

[services.frontend.deploy]
staticSite = true

[services.frontend.volumes]
volumes = ["app_storage:/app/storage"]

# PostgreSQL Database
[services.postgres]
image = "postgres:15"

[services.postgres.variables]
POSTGRES_DB = "z2"
POSTGRES_USER = "postgres"
POSTGRES_PASSWORD = "${{Postgres.POSTGRES_PASSWORD}}"

[services.postgres.volumes]
volumes = ["postgres_data:/var/lib/postgresql/data"]

# Redis Cache
[services.redis]
image = "redis:7-alpine"

[services.redis.volumes]
volumes = ["redis_data:/data"]

[volumes]
postgres_data = {}
redis_data = {}
app_storage = {}

# Environment variable templates
[environments.production]

[environments.production.variables]
# Backend
DEBUG = false
LOG_LEVEL = "INFO"
DATABASE_URL = "${{Postgres.DATABASE_URL}}"
REDIS_URL = "${{Redis.REDIS_URL}}"
PORT = "${{PORT}}"
STORAGE_PATH = "/app/storage"

# Frontend
VITE_API_BASE_URL = "https://${{backend.RAILWAY_PUBLIC_DOMAIN}}"
VITE_ENABLE_DEBUG = false
VITE_WS_BASE_URL = "wss://${{backend.RAILWAY_PUBLIC_DOMAIN}}"