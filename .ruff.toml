# Z2 Platform Configuration for Ruff
# Modern Python linter and code formatter

[tool.ruff]
target-version = "py311"
line-length = 88
indent-width = 4
respect-gitignore = true

[tool.ruff.lint]
# Enable comprehensive rule sets
select = [
    "E",      # pycodestyle errors
    "W",      # pycodestyle warnings
    "F",      # pyflakes
    "I",      # isort
    "B",      # flake8-bugbear
    "C4",     # flake8-comprehensions
    "UP",     # pyupgrade
    "N",      # pep8-naming
    "S",      # flake8-bandit (security)
    "T20",    # flake8-print
    "RUF",    # Ruff-specific rules
    "SIM",    # flake8-simplify
    "RET",    # flake8-return
    "PTH",    # flake8-use-pathlib
    "ERA",    # eradicate (commented-out code)
    "PL",     # pylint
    "TRY",    # tryceratops
    "FLY",    # flynt
    "PERF",   # perflint
    "FURB",   # refurb
    "LOG",    # flake8-logging
]

# Disable specific rules that may be too strict for this project
ignore = [
    "E501",    # line too long (handled by formatter)
    "E203",    # whitespace before ':'
    "B008",    # do not perform function calls in argument defaults
    "C901",    # too complex (we'll handle this manually)
    "S101",    # assert usage (we use it in tests)
    "S104",    # hardcoded bind all interfaces (0.0.0.0)
    "S108",    # probable insecure usage of temp file/directory
    "T201",    # print found (allow for debugging)
    "TRY003",  # avoid specifying long messages outside exception class
    "PLR0913", # too many arguments in function definition
    "PLR0912", # too many branches
    "PLR0915", # too many statements
    "PLR2004", # magic value used in comparison
]

[tool.ruff.lint.per-file-ignores]
# Allow certain violations in specific file types
"__init__.py" = ["F401", "F403"]  # unused imports
"tests/**/*.py" = [
    "S101",    # assert usage in tests
    "PLR2004", # magic values in tests
    "S106",    # hardcoded password in tests
]
"conftest.py" = ["F401", "F403"]
"**/migrations/**/*.py" = ["ALL"]  # Disable all checks for migrations

[tool.ruff.lint.isort]
force-single-line = false
combine-as-imports = true
force-sort-within-sections = true
known-first-party = ["app"]
known-third-party = [
    "fastapi",
    "pydantic", 
    "sqlalchemy",
    "alembic",
    "redis",
    "openai",
    "anthropic",
    "groq",
    "structlog",
    "pytest",
    "httpx"
]

[tool.ruff.lint.mccabe]
max-complexity = 10

[tool.ruff.lint.pycodestyle]
max-doc-length = 88

[tool.ruff.lint.pylint]
max-args = 8
max-branches = 15
max-returns = 8
max-statements = 60

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
docstring-code-format = true
docstring-code-line-length = "dynamic"